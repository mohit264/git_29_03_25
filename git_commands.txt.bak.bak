   34  git cat-file -p 723fdb
   35  git log -1
   36  git cat-file -p 56dff
   37  git cat-file -p b247db
   38  git add myfolder/
   39  git status
   40  git commit -m "New folder added"
   41  git log
   42  git cat-file -p 573ce06030
   43  git cat-file -p e923dc8c
   44  git cat-file -p d41ccdf6
   45  clear
   46  git cat-file -p d41ccdf6
   47  vim temp-tree
   48  cat temp-tree | git mktree
   49  git cat-file -t 121ead
   50  git cat-file -p 121ead
   51  git cat-file -p aec4c36312006
   52  git add mytree/
   53  git commit -m "new mytree folder added"
   54  git log -1
   55  git cat-file -p 46b4ec2da17cc
   56  git cat-file -p f3659aba4
   57  git cat-file -p 6509d375
   58  git status
   59  git add temp-tree
   60  git status
   61  git commit -m "Added temp-tree"
   62  echo "Hello, Git batch day 3" | git hash-object --stdin
   63  clear
   64  git cat-file -p 46260dc6f1886
   65  git status
   66  git add .
   67  git commit -m "updated file 1"
   68  git cat-file -p 3ae72c7
   69  git cat-file -p c9814359
   70  clear
   71  git cat-file -p f29b5ec66e8
   72  git add .
   73  git status
   74  git commit -m "Added new directories"
   75  git cat-file -p 44d8919
   76  clear
   77  git cat-file -p 330c7deec3fda
   78  git cat-file -p ee3f98484cfe3
   79  git cat-file -p f29b5ec66e8d
   80  cat temp-tree | mktree
   81  cat temp-tree | git mktree
   82  git cat-file -t 121eadb64c
   83  git cat-file -p 121eadb64c
   84  git cat-file -p aec4c36312
   85  git cat-file -p d41ccdf6d0154dfe
   86  git cat-file -p f29b5ec66e
   87  git status
   88  git hash-object mytree/file1.txt
   89  celar
   90  clear
   91  git log -3
   92  git cat-file -p 44d8919ef8
   93  git cat-file -p 
   94  git cat-file -p 330c7deec3f
   95  git cat-file -p f29b5ec6
   96  clear
   97  git cat-file -p d41ccdf6d01
   98  git cat-file -p f29b5ec6
   99  git log -1
  100  git cat-file -p 44d8919ef
  101  git cat-file -p 3ae72c7c02e23a3f
  102  git cat-file -p c9814359fae
  103  clear
  104  history >> git_day3.txt
  105  cd D:\Git_18_11_23
  106  echo "Second file in Git repository" | git hash-object --stdin
  107  echo "Second file in Git repository" >> file2.txt
  108  git hash-object ./file2.txt --stdin
  109  git hash-object "file2.txt" --stdin
  110  git hash-object file2.txt --stdin
  111  A
  112  git hash-object file2.txt
  113  find .git/objects/ -type f
  114  clear
  115  echo "Hello, Git" | hash-object --stdin
  116  echo "Hello, Git" | git hash-object --stdin
  117  echo "Hello, Git" >> file1.txt
  118  clear
  119  git hash-object file1.txt
  120  nano temp-tree.txt
  121  nano temp-tree.txt
  122  git hash-object file2.txt
  123  git hash-object file1.txt -w
  124  git hash-object file2.txt -w
  125  nano temp-tree.txt
  126  nano temp-tree.txt
  127  cat temp-tree.txt 
  128  clear
  129  cat temp-tree.txt | git mktree
  130  mkdir /d/temp2
  131  cd /d/temp2
  132  clear
  133  git status
  134  mkdir .git
  135  git status
  136  mkdir .git/objects
  137  git status
  138  mkdir .git/refs
  139  git status
  140  mkdir .git/refs/heads
  141  git status
  142  mkdir .git/HEAD
  143  git status
  144  echo -n "ref: refs/heads/master" > .git/HEAD
  145  rm .git/HEAD
  146  rm -r .git/HEAD
  147  echo -n "ref: refs/heads/master" > .git/HEAD
  148  git status
  149  clear
  150  echo -n "Git is an awsome tool!" | git hash-object -w
  151  echo -n "Git is an awsome tool!" | git hash-object --stdin
  152  ls .git/objects/2a
  153  ls .git/objects
  154  echo -n "Git is an awsome tool!" | git hash-object -w
  155  echo -n "Git is an awsome tool!" | git hash-object --stdin -w
  156  git update-index --add --cacheinfo 100644 2a90b83026c00f01722a544b74988694d39db90e gitInfo.txt
  157  git status
  158  echo -n "Git is an awsome tool!" >  gitInfo.txt
  159  git status
  160  tree /f .git
  161  git ls-tree
  162  git ls-tree -r
  163  git ls-tree -r .
  164  git write-tree
  165  git ls-tree
  166  git ls-tree -d
  167  git ls-tree -d a51e715
  168  git ls-tree -r a51e715
  169  git commit-tree a51e715 -m "Added new file"
  170  git cat-file -p a34796cb55
  171  git status
  172  git update-ref refs/heads/master a34796cb556dd3a2b35cfa3cb709832745d6261c
  173  git status
  174  git log
  175  ls .git/objects
  176  clear
  177  cd /d/git_solidfication/
  178  git status
  179  ls .git
  180  ls .git/refs/heads
  181  echo "ref: refs/heads/mohit" > .git/HEAD
  182  git status
  183  ls .git/objects/
  184  clear
  185  echo "Git is super awesome!" > learnGit.txt
  186  rm learnGit.txt 
  187  ls 
  188  ls -a
  189  echo "Git is super awesome!" | git hash-object --stdin -w
  190  ls .git/objects/
  191  git status
  192  git update-index --add --cacheinfo 100644 6216b8a4a90bd980f49fd5211be3944b0b879828 learningGit.txt
  193  clear
  194  git status
  195  ls .git
  196  echo "Git is super awesome!" > learningGit.txt
  197  git status
  198  clear
  199  git write-tree
  200  git cat-file -t 3de750ae01482b93
  201  git cat-file -p 3de750ae01482b93
  202  git commit-tree 3de750ae01482b936699d680158afc9aa843a2f4 -m "Initial commit!"
  203  git cat-file -t 97c8abeb
  204  git status
  205  ls .git/refs/heads/
  206  git update-ref refs/heads/mohit 
  207  97c8abeb644974d9ee255f46d73ce0ae2c687726
  208  git update-ref refs/heads/mohit 97c8abeb644974d9ee255f46d73ce0ae2c687726
  209  ls .git/refs/heads/
  210  git status
  211  git log
  212  git cat-file -p 97c8abeb644
  213  cd ..
  214  mkdir test3
  215  clear
  216  cd test3
  217  git status
  218  mkdir .git
  219  git status
  220  echo "ref: refs/heads/mohit" > .git/HEAD
  221  git status
  222  mkdir refs
  223  git status
  224  mkdir refs/heads
  225  git status
  226  mkdir .git/refs
  227  git
  228  git status
  229  clear
  230  mkdir .git/refs/heads
  231  git status
  232  mkdir .git/objects
  233  git status
  234  cd ../git_solidfication/
  235  history > git_from_scratch.txt
  236  clear
  237  echo "Some Garbage Content" > a.txt
  238  git status
  239  git add a.txt
  240  git status
  241  git write-tree
  242  git cat-file -p c13afaa8
  243  git commit-tree c13afaa86aec149a96b18b870496502b51530573 -m "Added a file"
  244  git status
  245  cat .git/refs/heads/master
  246  cat .git/refs/heads/mohit
  247  git cat-file -t 653cb6f1c164209c9dba427b3ea63c75b76a8db6
  248  git cat-file -p 653cb6f1c164209c9dba427b3ea63c75b76a8db6
  249  git update-ref refs/heads/mohit 653cb6f1c164209c9dba427b3ea63c75b76a8db6
  250  git status
  251  cd /d/git_06_04_24/
  252  git cat-file -p 723fdb
  253  cat temp-tree.txt | git mktree
  254  cat temp-tree | git mktree
  255  cat temp-tree | git mktree
  256  clear
  257  git ls-files
  258  git status
  259  git commit -a -m "Added day 3 history and object diagram files"
  260  clear
  261  git status
  262  git log -1
  263  git cat-file -p ecfc9a7506
  264  git cat-file -p d418
  265  git add .
  266  git status
  267  git commit -m "Added day 3 history and object diagram files"
  268  clear
  269  git status
  270  git ls-files
  271  git read-tree
  272  git read-tree --empty
  273  ks
  274  git status
  275  git reset --hard
  276  clea
  277  clear
  278  git status
  279  git log
  280  clear
  281  git cat-file -p  44d8919ef892fc583e985caafc76b02d1b0e191
  282  git cat-file -p 330c7de
  283  git cat-file -p aec4
  284  clear
  285  git log-1
  286  git log -1
  287  git log -2
  288  git cat-file -p ecfc9a7506
  289  git cat-file -p d4181e8
  290  git cat-file -p f8383403
  291  git cat-file -p 34533418c
  292  cat .git/refs/heads/
  293  ls .git/refs/heads/
  294  clear
  295  cat .git/refs/heads/master 
  296  echo "Testing Master Reference to latest commit" > branch.txt
  297  git status
  298  git add branch.txt 
  299  git status
  300  git commit -m "Added new file"
  301  cat .git/refs/heads/master 
  302  clear
  303  git cat-file -p e73bc3246
  304  git cat-file -p 0593bc9f
  305  cat .git/refs/heads/master 
  306  clear
  307  git branch
  308  git branch feature/my-feature1
  309  git branch
  310  cat .git/refs/heads/feature/my-feature1 
  311  git switch feature/my-feature1 
  312  cat .git/HEAD 
  313  clear
  314  git branch
  315  echo "Working on my new feature" > feature1.tdt
  316  git status
  317  git add feature1.tdt 
  318  git commit -m "Added new feature"
  319  git cat-file -p 7f630
  320  clear
  321  git cat-file -p 91e8709a
  322  cat .git/HEAD 
  323  echo "New content added in Feature1" >> feature1.tdt 
  324  git status
  325  git add feature1.tdt 
  326  git status
  327  git commit -m "Updated content"
  328  cat .git/refs/heads/feature/my-feature1 
  329  cat .git/HEAD 
  330  clear
  331  ls .git/refs/heads/
  332  history > git_day4
  333  history > git_day4.txt
  334  tree
  335  clear
  336  git switch master
  337  git status
  338  git add .
  339  git staus 
  340  git status
  341  clea
  342  clear
  343  git commit -m "Added Day4 files and updated diagram"
  344  git staus
  345  git status
  346  git ls-files
  347  clear
  348  git tag
  349  git tag -a Day5 -m "Day5 understanding"
  350  git tag
  351  git cat-file -t Day5
  352  git cat-file -p Day5
  353  clear
  354  git log -1
  355  git cat-file -p Day5
  356  echo "Created new Tag on Day5" > tag.txt
  357  git add .
  358  git status
  359  git commit -m "Added tag File"
  360  git log -1
  361  git cat-file -p e5a7a0f8260d
  362  clear
  363  cat .git/refs/tags/Day5
  364  cat-file -p 9928087efdcd78c
  365  git cat-file -p 9928087efdcd78c
  366  git log -2
  367  cat .git/refs/tags/Day5
  368  git cat-file -t 9928087efdcd78c7d52b2c3ca1a7c7dc718a023
  369  git cat-file -p 9928087efdcd78c7d52b2c3ca1a7c7dc718a023
  370  git tag
  371  git tag sometag
  372  git tag
  373  git log -1
  374  clear
  375  cat .git/refs/tags/Day5 
  376  cat .git/refs/tags/sometag 
  377  git log -1
  378  git cat-file -p 9928087efdcd78c7
  379  git cat-file -t 9928087efdcd78c7
  380  clear
  381  cat .git/refs/tags/sometag 
  382  git log -1
  383  git cat-file -t e5a7a0f8260
  384  cat .git/refs/tags/Day5 
  385  git cat-file -p Day5
  386  git cat-file -p sometag
  387  git chekout Day5
  388  git checkout Day5
  389  git checkout master
  390  clear
  391  cat .git/HEAD 
  392  git switch feature/my-feature1 
  393  cat .git/HEAD 
  394  cat .git/refs/heads/master
  395  cat .git/refs/heads/feature/my-feature1 
  396  clear
  397  git switch master
  398  cat .git/HEAD 
  399  clear
  400  git log
  401  clear
  402  git checkout ecfc9a7506a98bc
  403  git cat-file -p ecfc9a7
  404  clear
  405  git status
  406  cat .git/HEAD 
  407  echo "Started working on Federated Authentication" > Federated_start.txt
  408  git status
  409  git add Federated_start.txt 
  410  git status
  411  git commit -m "implitmented code for Federated Auth"
  412  clear
  413  cat .git/HEAD 
  414  git ca-file -p 2abdf25
  415  git cat-file -p 2abdf25
  416  echo "Completed Implementation of Federated Authentication" > Federated_End.txt
  417  clear
  418  git status
  419  git add .
  420  git status
  421  cat .git/HEAD 
  422  clear
  423  git commit -m "Federated Auth POC done"
  424  cat .git/HEAD 
  425  git switch master
  426  cat .git/refs/heads/master 
  427  clear
  428  cat .git/HEAD 
  429  git checkout 56fc
  430  cat .git/HEAD 
  431  clear
  432  git switch master
  433  clear
  434  cat .git/HEAD 
  435  cat .git/refs/master
  436  cat .git/refs/heads/master 
  437  echo "some temp" > file_temp.txt
  438  git add .
  439  git commit -m "Added temp file"
  440  cat .git/HEAD 
  441  cat .git/refs/heads/master 
  442  cler
  443  clear
  444  git cat-file -p 7e62ed5
  445  cd /d/git_solidfication/
  446  mkdir /d/git_solidfication
  447  cd /d/git_solidfication/
  448  ls
  449  ls -a
  450  clear
  451  git status
  452  echo "Hello, World!" | git hash-object
  453  echo "Hello, World!" | git hash-object --stdin
  454  echo "Hello, World!" | git hash-object --stdin -w
  455  cd ..
  456  mkdir test2
  457  cd test2
  458  git init
  459  clear
  460  echo "Hello, World!" | git hash-object --stdin -w
  461  echo "Hello, World!" | git hash-object --stdin
  462  echo "Hello, World!" | git hash-object --stdin -w
  463  clear
  464  echo "Hello, World!" | git hash-object --stdin -w
  465  git inint
  466  git init
  467  ls -a
  468  echo "Hello, World!" | git hash-object --stdin -w
  469  ls .git/objects/
  470  clear
  471  cd /d/git_solidfication/
  472  clear
  473  echo "Hello, World!" | git hash-object --stdin -w
  474  git status
  475  ls -a
  476  mkdir .git
  477  git status
  478  clear
  479  ls -a
  480  mkdir .git/objects
  481  git status
  482  mkdir .git/refs
  483  git status
  484  mkdir .git/refs/heads
  485  git status
  486  ls -a
  487  ls .git -a
  488  ls .git/refs/ -a
  489  clear
  490  cd test2
  491  cd ../test2
  492  ls .git/refs/heads/
  493  cat .git/HEAD 
  494  vim .git/HEAD
  495  echo "My First File" > first.text
  496  git add .
  497  git commit -m "My First Commit"
  498  ls .git/refs/heads/
  499  clear
  500  cd git_29_03_25/
  501  git branch
  502  git log -1
  503   git status
  504  clear
  505  cat .git/refs/heads/master 
  506  git log -1 --oneline
  507  git log --oneline
  508  git tag
  509  git tag -a my-first-tag -m "We have covered branch illusion"
  510  git tag
  511  clear
  512  git cat-file -t f1923e1
  513  git cat-file -p f1923e1
  514  git add .
  515  git status
  516  clear
  517  git commit -m "Modified commit walk-through visual"
  518  git tag
  519  git cat-file -p my-first-tag
  520  git cat-file -t my-first-tag
  521  git tag my-second
  522  git tag
  523  clear
  524  git cat-file -t my-second
  525  git cat-file -t my-first-tag
  526  git cat-file -p my-first-tag
  527  git cat-file -p my-second
  528  git log -1
  529  git cat-file -p 0b96
  530  git diff 0b96 9783
  531  clear
  532  history > git_commands
  533  history > git_commands.txt
